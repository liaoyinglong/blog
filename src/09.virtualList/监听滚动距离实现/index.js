"use strict";
var set = Reflect.set;
const { useMemo, useEffect, useRef, useState } = React;
const maxCount = 0;
const arr = Array.from({ length: maxCount }, (v, i) => i + 1);
function VirtualList(props) {
    const { list, itemHeight } = props;
    const [containerHeight, setContainerHeight] = useState(0);
    const [index, setIndex] = useState({ start: 0, end: 0 });
    const [offset, setOffset] = useState(0);
    const containerRef = useRef(null);
    // 列表总高度
    const listHeight = useMemo(() => {
        return list.length * itemHeight;
    }, [list.length, itemHeight]);
    // 可以看见的条数
    const visibleCount = useMemo(() => {
        // 增大可视区高度
        return ~~((containerHeight + 200) / itemHeight);
    }, [containerHeight, itemHeight]);
    // 可以看见的数据
    const visibleData = useMemo(() => {
        return list.slice(index.start, Math.min(index.end, list.length));
    }, [list, index.start, index.end]);
    // effects
    useEffect(() => {
        containerRef.current &&
            setContainerHeight(containerRef.current.clientHeight);
    }, []);
    useEffect(() => {
        setIndex(prev => (Object.assign(Object.assign({}, prev), { end: visibleCount })));
    }, [visibleCount]);
    // events
    const onContainerScroll = e => {
        const { scrollTop } = e.target;
        const start = ~~(scrollTop / itemHeight);
        setIndex({
            start,
            end: start + visibleCount
        });
        setOffset(scrollTop);
    };
    // Components
    const listComponents = useMemo(() => {
        return visibleData.map((item, i) => {
            return (React.createElement("div", { className: "list-item", key: i, style: { height: `${itemHeight}px` } }, item));
        });
    }, [visibleData, itemHeight]);
    return (React.createElement("div", { className: "list-container", ref: containerRef, onScroll: onContainerScroll },
        React.createElement("div", { className: "list-phantom", style: { height: `${listHeight}px` } }),
        React.createElement("div", { className: "list", style: { transform: `translate3d(0,${offset}px,0)` } }, listComponents)));
}
function App() {
    const [list, setList] = useState(arr);
    const add = (max) => {
        const newList = [];
        for (let i = list.length - 1; i < max; i++) {
            newList.push(i++);
        }
        setList(list.concat(newList));
    };
    return (React.createElement("div", { className: "content-area" },
        React.createElement(VirtualList, { list: list, itemHeight: 100 }),
        React.createElement("br", null),
        React.createElement("button", { onClick: () => add(100) }, "\u8FFD\u52A0100\u6761\u6570\u636E"),
        React.createElement("button", { onClick: () => add(10000) }, "\u8FFD\u52A010000\u6761\u6570\u636E"),
        React.createElement("button", { onClick: () => add(40000) }, "\u8FFD\u52A040000\u6761\u6570\u636E")));
}
ReactDOM.render(React.createElement(App, null), document.querySelector("#root"));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQU8sR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUM7QUFFekIsTUFBTSxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxHQUFHLEtBQUssQ0FBQztBQUV2RCxNQUFNLFFBQVEsR0FBRyxDQUFDLENBQUM7QUFDbkIsTUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztBQU85RCxTQUFTLFdBQVcsQ0FBZ0IsS0FBMEI7SUFDNUQsTUFBTSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUsR0FBRyxLQUFLLENBQUM7SUFFbkMsTUFBTSxDQUFDLGVBQWUsRUFBRSxrQkFBa0IsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxRCxNQUFNLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDekQsTUFBTSxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDeEMsTUFBTSxZQUFZLEdBQUcsTUFBTSxDQUFpQixJQUFJLENBQUMsQ0FBQztJQUVsRCxRQUFRO0lBQ1IsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLEdBQUcsRUFBRTtRQUM5QixPQUFPLElBQUksQ0FBQyxNQUFNLEdBQUcsVUFBVSxDQUFDO0lBQ2xDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQztJQUU5QixVQUFVO0lB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