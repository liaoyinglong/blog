"use strict";
const { useMemo, useEffect, useRef, useState } = React;
const maxCount = 100;
const arr = Array.from({ length: maxCount }, (v, i) => i + 1);
function VirtualList(props) {
    const { list, itemHeight } = props;
    const [containerHeight, setContainerHeight] = useState(0);
    const [index, setIndex] = useState({ start: 0, end: 0 });
    const [offset, setOffset] = useState(0);
    const containerRef = useRef(null);
    // 列表总高度
    const listHeight = useMemo(() => {
        return list.length * itemHeight;
    }, [list.length, itemHeight]);
    // 可以看见的条数
    const visibleCount = useMemo(() => {
        // 增大可视区高度
        return ~~((containerHeight + 200) / itemHeight);
    }, [containerHeight, itemHeight]);
    // 可以看见的数据
    const visibleData = useMemo(() => {
        return list.slice(index.start, Math.min(index.end, list.length));
    }, [list, index.start, index.end]);
    // effects
    useEffect(() => {
        containerRef.current &&
            setContainerHeight(containerRef.current.clientHeight);
    }, []);
    useEffect(() => {
        setIndex(prev => (Object.assign(Object.assign({}, prev), { end: visibleCount })));
    }, [visibleCount]);
    // events
    const onContainerScroll = e => {
        const { scrollTop } = e.target;
        const start = ~~(scrollTop / itemHeight);
        setIndex({
            start,
            end: start + visibleCount
        });
        setOffset(scrollTop - (scrollTop % itemHeight));
    };
    // Components
    const listComponents = useMemo(() => {
        return visibleData.map((item, i) => {
            return (React.createElement("div", { className: "list-item", key: i, style: { height: `${itemHeight}px` } }, item));
        });
    }, [visibleData, itemHeight]);
    return (React.createElement("div", { className: "list-container", ref: containerRef, onScroll: onContainerScroll },
        React.createElement("div", { className: "list-phantom", style: { height: `${listHeight}px` } }),
        React.createElement("div", { className: "list", style: { transform: `translate3d(0,${offset}px,0)` } }, listComponents)));
}
function App() {
    return (React.createElement("div", { className: "content-area" },
        React.createElement(VirtualList, { list: arr, itemHeight: 100 })));
}
ReactDOM.render(React.createElement(App, null), document.querySelector("#root"));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsR0FBRyxLQUFLLENBQUM7QUFFdkQsTUFBTSxRQUFRLEdBQUcsR0FBRyxDQUFDO0FBQ3JCLE1BQU0sR0FBRyxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFPOUQsU0FBUyxXQUFXLENBQWdCLEtBQTBCO0lBQzVELE1BQU0sRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLEdBQUcsS0FBSyxDQUFDO0lBRW5DLE1BQU0sQ0FBQyxlQUFlLEVBQUUsa0JBQWtCLENBQUMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDMUQsTUFBTSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsR0FBRyxRQUFRLENBQUMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3pELE1BQU0sQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3hDLE1BQU0sWUFBWSxHQUFHLE1BQU0sQ0FBaUIsSUFBSSxDQUFDLENBQUM7SUFFbEQsUUFBUTtJQUNSLE1BQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxHQUFHLEVBQUU7UUFDOUIsT0FBTyxJQUFJLENBQUMsTUFBTSxHQUFHLFVBQVUsQ0FBQztJQUNsQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7SUFFOUIsVUFBVTtJQUNWLE1BQU0sWUFBWSxHQUFHLE9BQU8sQ0FBQyxHQUFHLEVBQUU7UUFD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